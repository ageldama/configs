#!/usr/bin/env bash

if [[ -z "${PERL_LOCAL_LIB_ROOT}" ]]; then
    PERL_LOCAL_LIB_SH=~/perl5/local-lib.sh
    if [[ ! -f "${PERL_LOCAL_LIB_SH}" ]]; then
        perl -Mlocal::lib > "${PERL_LOCAL_LIB_SH}"
    fi
    source "${PERL_LOCAL_LIB_SH}"
fi


# ...for opensuse: xdm-xsession
if [[ "x${MY_XSESSIONRC}" -eq "x" && -x ~/.xsessionrc ]]; then
  source ~/.xsessionrc
fi

#export LANG=ko_KR.UTF-8


OSNAME=`uname`

export PATH=$PATH:$HOME/local/bin

# fedora 34, xdm oddity
[[ ":$PATH:" != *":/usr/local/bin:"* ]] && PATH="/usr/local/bin:${PATH}"


export TERMINAL=x-terminal-emulator

# ime
if [[ -f ~/.use-nabi ]]; then
  export GTK_IM_MODULE=xim
  export QT_IM_MODULE=xim
  export XMODIFIERS=@im=nabi
  nabi &
elif [[ -f ~/.use-uim ]]; then
  export GTK_IM_MODULE=uim
  export QT_IM_MODULE=uim
  export XMODIFIERS=@im=uim
  pgrep -u $UID uim-xim || uim-xim &
elif [[ -f ~/.use-ibus ]]; then
  export GTK_IM_MODULE=xim
  # export GTK_IM_MODULE=ibus
  export QT_IM_MODULE=ibus
  export XMODIFIERS=@im=ibus
  pgrep -u $UID ibus-daemon || ibus-daemon -d --xim
elif [[ -f ~/.use-fcitx ]]; then
  if [[ -z "$GTK_IM_MODULE" ]]; then
    # without im-config:
    export GTK_IM_MODULE=fcitx
    export QT_IM_MODULE=fcitx
    export XMODIFIERS=@im=fcitx
    pgrep fcitx || fcitx -s 5 -r -d &
  elif [[ "$GTK_IM_MODULE" == "fcitx" ]]; then
    # fedora 34, xdm oddity, once again
    pgrep fcitx || fcitx -s 5 -r -d &
  fi
elif [[ -f ~/.use-fcitx5 ]]; then
  if [[ -z "$GTK_IM_MODULE" ]]; then
    # without im-config:
    export GTK_IM_MODULE=fcitx5
    export QT_IM_MODULE=fcitx5
    export XMODIFIERS=@im=fcitx5
    pgrep fcitx5 || fcitx5 -s 5 -r -d &
  elif [[ "$GTK_IM_MODULE" == "fcitx5" ]]; then
    # fedora 34, xdm oddity, once again
    pgrep fcitx5 || fcitx5 -s 5 -r -d &
  fi
elif [[ -f /usr/share/im-config/xinputrc.common ]]; then
  . /usr/share/im-config/xinputrc.common
  if [[ -f ~/.xinputrc ]]; then
    . ~/.xinputrc
  fi
fi

if [[ -f ~/.use-ibus-daemon-only ]]; then
  ibus-daemon -d --xim
fi

# polkit-1
if [[ -x /usr/bin/lxpolkit ]]; then
  lxpolkit &
elif [[ -x /usr/libexec/polkit-gnome-authentication-agent-1 ]]; then
  /usr/libexec/polkit-gnome-authentication-agent-1 &
elif [[ -x /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 ]]; then
  /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 &
fi


# ssh / gnome-keyring
if [[ -f ~/.use-gnome-keyring ]]; then
  case ${OSNAME} in
    Linux)
      if (! pgrep -u $UID ssh-agent ) && (! pgrep -u $UID gnome-keyring ); then
        #if [[ "$XDG_SESSION_TYPE" -eq "tty" ]]; then
          dbus-update-activation-environment --all --verbose #--systemd DISPLAY  # for `gnome-keyring-daemon'
          eval $(dbus-launch /usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)
          export SSH_AUTH_SOCK
          export GPG_AGENT_INFO
          export GNOME_KEYRING_CONTROL
          export GNOME_KEYRING_PID
        #fi
      elif [[ -f /etc/fedora-release ]]; then
        eval $(gnome-keyring-daemon --start)
      else
        if pgrep -u $UID gnome-keyring && [[ -e /run/user/${UID}/keyring/ssh ]]; then
          export SSH_AUTH_SOCK=/run/user/${UID}/keyring/ssh
        elif test -S "$SSH_AUTH_SOCK" -a -x "$SSH_ASKPASS"; then
          ssh-add < /dev/null &
        else
          dbus-update-activation-environment --all --verbose #--systemd DISPLAY  # for `gnome-keyring-daemon'
          eval $(dbus-launch /usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)
          export SSH_AUTH_SOCK
          export GPG_AGENT_INFO
          export GNOME_KEYRING_CONTROL
          export GNOME_KEYRING_PID
        fi
      fi
      ;;

    FreeBSD)
      eval $(dbus-launch --sh-syntax)
      #dbus-update-activation-environment --systemd DISPLAY  # for `gnome-keyring-daemon'
      eval $(/usr/local/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)
      export SSH_AUTH_SOCK
      ;;
  esac
elif [[ -f ~/.use-ssh-add ]]; then
  if [[ -z "${SSH_AUTH_SOCK}" ]]; then
    eval "$(ssh-agent)"
  fi

  if [[ ! -z "${SSH_AUTH_SOCK}" ]]; then
    # FreeBSD: `pkg add -y OpenSSH-askpass`
    SSH_ASKPASS_=$(which ssh-askpass)
    if [[ ! -z "${SSH_ASKPASS_}" ]]; then
      SSH_ASKPASS="${SSH_ASKPASS_}"
      SSH_ASKPASS_REQUIRE=prefer
    fi

    ssh-add < /dev/null &
  fi
fi

# Notifications
if [[ -f ~/.use-notifications-dump ]]; then
    # Prefer `dunstctl history-pop` instead:
    dbus-monitor "interface='org.freedesktop.Notifications', member='Notify'" >> /tmp/notifications-${USER}-${INVOCATION_ID}.log &
fi

# Notification growl: must be loaded before anything does `notify-send`
if [[ -f ~/.use-dunst ]]; then
  pkill -u $UID xfce4-notifyd
  dunst &
elif [[ -f ~/.use-xfce4-notifyd ]]; then
  systemctl --user start xfce4-notifyd.service
fi

#test -f ~/.dropbox-dist/dropboxd && ~/.dropbox-dist/dropboxd &

# "xev" first.
# xmodmap -e 'keycode 108 = Hangul'
# TODO test -f ~/.Xmodmap && xmodmap ~/.Xmodmap
# setxkbmap -option caps:super

# NO-POLLING, instead:        killall -HUP xbindkeys
# dbus-launch xbindkeys -n -p &
if [[ -f ~/.use-xbindkeys ]]; then
    dbus-launch xbindkeys &
fi

#synclient TapButton2=3
#xgamma -gamma 0.6

if [[ -f ~/.use-freebsd-synclient ]]; then
  ~/local/scripts/synclient/enable.sh
  ~/local/scripts/synclient/tap-to-click.sh
fi

xset b off
#xset s on
#xset s 300

# `xset r rate N R` :: after N-ms, repeats R-times :
xset r rate 400 40

test -f ~/.use-xset-noblank && ~/local/bin/xset-noblank.sh &

test -f ~/.Xresources && xrdb -merge $HOME/.Xresources &

if [[ ! -f ~/.no-screensaver ]]; then
  if [[ -f ~/.use-xautolock ]]; then
    xautolock &
  elif [[ -f ~/.use-xss-lock ]]; then
    xss-lock -- ~/local/bin/i3lock+dpms.bash &
    # 일단 disable-해서, 자연스럽게 초기화+enable 되도록:
    xset s 0
    ~/local/bin/xscreensaver-toggle.pl &
  else
    xscreensaver -no-splash &
  fi
fi

#
if [[ -f ~/.use-pipewire ]]; then
  pipewire &
fi

if [[ -f ~/.use-pactl-zeroconf-discover ]]; then
  pactl load-module module-zeroconf-discover
fi

# Mute all audio input
pactl-mute.pl source all &

# NetworkManager
nm-applet &

# volume
test -f ~/.use-volumeicon && volumeicon &

# Redshift
if [[ -f ~/.use-redshift ]]; then
    SEOUL_POS=37.566:126.977 # Seoul
    which redshift-gtk
    if [[ $? -eq 0 ]]; then
        redshift-gtk -l $SEOUL_POS &
    else
        redshift -l $SEOUL_POS &
    fi
fi

# Compositor
if [[ -f ~/.use-picom ]]; then
  picom -b &
fi

# Bluetooth
test -f ~/.use-blueman && blueman-applet &


# Onboard
test -f ~/.use-onboard && onboard &


if [[ -f ~/.use-unclutter ]]; then
  unclutter -noevents -idle 2 -jitter 1 -root &
fi


# hotkeys
#sxhkd &

# bg-color
if [[ -x  ~/.fehbg ]]; then
    ~/.fehbg &
else
    hsetroot -solid '#3f4058' &
fi


# caps->ctrl
~/local/bin/caps-to-ctrl.sh 2 &

# pointerkeys
test -f ~/.use-keypad-pointer && setxkbmap -option keypad:pointerkeys

# urxvtd
#test -f ~/.use-urxvtd && urxvtd --quiet --opendisplay --fork &

#
test -f ~/.xinitrc2 && ~/.xinitrc2


#
#xprop -root -f _NET_DESKTOP_LAYOUT 32cccc -set _NET_DESKTOP_LAYOUT 0,5,2,0

if [[ -f ~/.use-icewm ]]; then
  if [[ -z "$DBUS_SESSION_BUS_ADDRESS" ]]; then
    exec dbus-launch icewm ${1+"$@"}
  else
    exec icewm ${1+"$@"}
  fi
fi

if [[ -f ~/.use-i3 ]]; then
  if [[ -z "$DBUS_SESSION_BUS_ADDRESS" ]]; then
    exec dbus-launch i3 ${1+"$@"}
  else
    exec i3 ${1+"$@"}
  fi
fi

if [[ -f ~/.use-openbox ]]; then

  if [[ -z "$DBUS_SESSION_BUS_ADDRESS" ]]; then
      if [[ -f ~/.use-xfce4-panel ]]; then
          dbus-launch xfce4-panel &
      elif [[ -f ~/.use-lxpanel ]]; then
          dbus-launch lxpanel &
      elif [[ -f ~/.use-polybar ]]; then
        dbus-launch polybar bottombar &
      elif [[ -f ~/.use-tint2 ]]; then
        dbus-launch tint2 &
      fi

    #dbus-launch lxpanel &
    #(sleep 2s; polybar topbar) &
    #(sleep 7s; pkill -USR1 topbar) &

    exec dbus-launch openbox ${1+"$@"}
  else
    # under xsession
    #lxpanel &
      if [[ -f ~/.use-xfce4-panel ]]; then
          xfce4-panel &
      elif [[ -f ~/.use-lxpanel ]]; then
          lxpanel &
      elif [[ -f ~/.use-polybar ]]; then
        polybar bottombar &
      elif [[ -f ~/.use-tint2 ]]; then
        tint2 &
      fi

      exec openbox ${1+"$@"}
  fi
fi

###EOF
