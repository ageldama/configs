" ~/.vimrc
"
"  ageldama@gmail.com : 2006-11-16 12:36
"  ageldama@gmail.com : 2017-08-05 20:10
"
"

" https://github.com/VundleVim/Vundle.vim/issues/769#issue-188457119
" START - Setting up Vundle - the vim plugin bundler
let iCanHazVundle=1
let vundle_readme=expand('~/.vim/bundle/Vundle.vim/README.md')
if !filereadable(vundle_readme)
  echo "Installing Vundle.."
  echo ""
  silent !mkdir -p ~/.vim/bundle
  silent !git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
  let iCanHazVundle=0
endif
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#rc()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
if iCanHazVundle == 0
  echo "Installing Bundles, please ignore key map error messages"
  echo ""
  :PluginInstall
endif
" END - Setting up Vundle - the vim plugin bundler

" git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'
"
" The bundles you install will be listed here
"
filetype plugin indent on
"
"Bundle 'davidhalter/jedi-vim'
Bundle 'tpope/vim-fugitive'
"Bundle 'fholgado/minibufexpl.vim'
Bundle 'jlanzarotta/bufexplorer'
Bundle 'bling/vim-airline'
Bundle 'scrooloose/nerdtree'
Bundle 'kien/ctrlp.vim'
Bundle 'rbgrouleff/bclose.vim'

""Bundle 'fatih/vim-go'


Bundle 'mileszs/ack.vim'



if 0

" Track the engine.
Plugin 'SirVer/ultisnips'

" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<c-tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

endif




"------------------------------------------------------------------------------

set paste

let g:ackprg = 'ag --vimgrep'

" use only Vim settings (instead of vi)
set nocompatible

" 문법강조
syntax on

" 줄번호
set number

" Row/Col?
set ruler

" 비쥬얼벨
set visualbell

" 자동들여쓰기 및 탭크기랑 <<, >> 크기조절.
set autoindent
set smartindent
set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab	" tab대신 스페이스!

" wrap? 그냥 보이는 것만 설정합니다.
set wrap

" textwidth : 자동으로 행을 자르기. 0이면 끄기.
set textwidth=250

" modeline 향수
set modeline

set showmode
set showcmd

" 검색
set hls
set incsearch
set ignorecase	" 대소문자무시
set scs	" smart-search

" 백스페이스 : 언제나, 심지어 내가 방금 입력한게 아닌 것도 지우도록-_-
set backspace=indent,eol,start


" 폰트
"set guifont=Consolas:h14:cANSI
"set guifont=Bitstream_Vera_Sans_Mono:h14:cANSI

" 메뉴&툴바
set guioptions=m

" 색상설정
"color koehler
if has('gui_running')
    colorscheme koehler
    set guifont=Monospace\ 11
else
    set bg=dark
endif


if 0 
    Plugin 'bluz71/vim-moonfly-colors' 
    colorscheme moonfly
    endif


" 파일인코딩
set fencs=utf8,euc-kr

" 파일타입설정
filetype on
filetype indent on
filetype plugin on

" vim-jedi
"let g:jedi#popup_on_dot=0   " it's faster. just use <C>-<SPACE> for the completion popup.


" Add the virtualenv's site-packages to vim path
"python3 << EOF
"import os.path
"import sys
"import vim
"if 'VIRTUAL_ENV' in os.environ:
"    project_base_dir = os.environ['VIRTUAL_ENV']
"    sys.path.insert(0, project_base_dir)
"    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
"    execfile(activate_this, dict(__file__=activate_this))
"EOF


"
" http://unlogic.co.uk/2013/02/08/vim-as-a-python-ide/
" http://www.sontek.net/blog/2011/05/07/turning_vim_into_a_modern_python_ide.html#virtualenv
"


" airline
set laststatus=2

" minibufexplorer
"map <Leader>mbe :MBEOpen<cr>
"map <Leader>mbc :MBEClose<cr>
"map <Leader>mbt :MBEToggle<cr>




"EOF
